int brushSize = 10;
color stroke = color(0,0,0);
ArrayList<PVec> mousePos = new ArrayList<PVec>();
ArrayList<PVec> redo = new ArrayList<PVec>();
PVec pos;
PVec flag = new PVec(2001, 800);
boolean controlDown = false;
boolean shiftDown = false;
int flagIndex = 0;


void setup() {
size(1000, 800); 
background(200);}

void draw(){
stroke(stroke);
strokeWeight(brushSize);
background(200);
if(mousePressed) {
  pos = new PVec(mouseX, mouseY);
  mousePos.add(pos);
}
if (mousePos.size() != 0) {
  for (int i = 0; i < mousePos.size()-1;  i++) {
    if(mousePos.get(i+1).getPos().x != 2001 && mousePos.get(i).getPos().x != 2001) {
    PVector position1 = mousePos.get(i).getPos();
    PVector position2 = mousePos.get(i+1).getPos();
    line(position1.x, position1.y, position2.x, position2.y);
    }
  }
}
    
if(controlDown) {
  if (keyCode == 'Z') {
    undo();
    controlDown = false;
  }
  if (shiftDown) {
    redo();
    shiftDown = false;
  }
}
}


void mouseReleased() {
  mousePos.add(flag);//add flag
  
}

class PVec {
   PVector pos;
  
  PVec(float x, float y) {
    pos = new PVector(x,y);
  }
  PVector getPos() {
   return pos;
  }
}
void keyPressed() {
  if (key == CODED) {
    if (keyCode == CONTROL) {
      controlDown = true;}
    if (keyCode == SHIFT)
      shiftDown = true;
    
  }
}
  
void keyReleased() {
  // Remember if CTRL or SHIFT are pressed or not
  if (key == CODED) {
    if (keyCode == CONTROL) 
      controlDown = false;
    if (keyCode == SHIFT)
      shiftDown = false;
  }
}
public void undo() {
  flagIndex = 0;
  //debugger: 
  for (int i = 0; i < mousePos.size();  i++) {
println(mousePos.get(i).getPos().x);
}
 println("flag index" + flagIndex);
 println("size" + mousePos.size());
  
  for (int i = mousePos.size()-2; i > 0;  i--) {
    if(mousePos.get(i).getPos().x == 2001) {
      flagIndex = i; //all data that is after the flag, we pop from top
                     // last in, first out
    }
  }
      println("flag index" + flagIndex);
      println(mousePos.size());
  for (int i = mousePos.size()-1; i > flagIndex; i --) {
    redo.add(mousePos.get(i));
    mousePos.remove(i);
    //debug -originally counted i up (i++) from flagindex to size. everytime we remove, the indices change OMG.
    println("removed: " + mousePos.get(i).getPos());
  }
  println(mousePos.size());

//for (int i = 0; i < mousePos.size();  i++) {
//println(mousePos.get(i).getPos().x);
//}
  //debugger: 
  for (int i = 0; i < redo.size();  i++) {
println(redo.get(i).getPos().x);
}
}

public void redo() {
  if (flagIndex != 0) {
    mousePos.add(flag);
    for (int i = redo.size()-1; i > 0; i -- ) {
      PVec redopos = new PVec(redo.get(i).getPos().x, redo.get(i).getPos().y);
    mousePos.add(redopos);
    redo.remove(i);
}
  }
}
  
