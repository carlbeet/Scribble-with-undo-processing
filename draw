int brushSize = 10;
color stroke = color(0,0,0);
ArrayList<PVec> mousePos = new ArrayList<PVec>();
ArrayList<PVec> redo = new ArrayList<PVec>();
PVec pos;
PVec flag = new PVec(2001, 800);
boolean controlDown = false;
boolean shiftDown = false;
int flagIndex = 0;

/*
Debug Log
line 106   originally counted i up (i++) from flagindex to size. everytime we remove, the indices change OMG.
line 101   need to break-- exit for loop once we find the first flag.
line 131   add counter to make sure we are going to the second flag we find. (first flag sits at the tail)   
*/

void setup() {
size(1000, 800); 
background(200);}

void draw(){
stroke(stroke);
strokeWeight(brushSize);
background(200);
if(mousePressed) {
  pos = new PVec(mouseX, mouseY);
  mousePos.add(pos);
}
if (mousePos.size() != 0) {
  for (int i = 0; i < mousePos.size()-1;  i++) {
    if(mousePos.get(i+1).getPos().x != 2001 && mousePos.get(i).getPos().x != 2001) {
    PVector position1 = mousePos.get(i).getPos();
    PVector position2 = mousePos.get(i+1).getPos();
    line(position1.x, position1.y, position2.x, position2.y);
    }
  }
}
    
if(controlDown) {
  if (keyCode == 'Z') {
    undo();
    controlDown = false;
  if (shiftDown) {
    redo();
    shiftDown = false;
  }
}
}

}


void mouseReleased() {
  mousePos.add(flag); //add flag
  
}

class PVec {
   PVector pos;
  
  PVec(float x, float y) {
    pos = new PVector(x,y);
  }
  PVector getPos() {
   return pos;
  }
}
void keyPressed() {
  if (key == CODED) {
    if (keyCode == CONTROL) {
      controlDown = true;}
    if (keyCode == SHIFT)
      shiftDown = true;
    
  }
}
  
void keyReleased() {
  // Remember if CTRL or SHIFT are pressed or not
  if (key == CODED) {
    if (keyCode == CONTROL) 
      controlDown = false;
    if (keyCode == SHIFT)
      shiftDown = false;
  }
}


public void undo() {
  flagIndex = 0;
  
  for (int i = mousePos.size()-2; i > 0;  i--) {
    if(mousePos.get(i).getPos().x == 2001) {
      flagIndex = i; //all data that is after the flag, we pop from top
                     // last in, first out
      break; //debug log
    }
  }
   
  for (int i = mousePos.size()-1; i > flagIndex; i --) {
    redo.add(mousePos.get(i));
    mousePos.remove(i);
    //debug -originally counted i up (i++) from flagindex to size. everytime we remove, the indices change OMG.
   
  }
}


public void redo() {
  int counter = 0;
  if (flagIndex != 0) {
    for (int i = redo.size()-1; i >= 0; i -- ) {
      
    if(redo.get(i).getPos().x == 2001) {
      counter ++;
      if (counter == 2) {
      break; }
    }
    PVec redopos = new PVec(redo.get(i).getPos().x, redo.get(i).getPos().y);
    mousePos.add(redopos);
    redo.remove(i);
} 
  }
  counter = 0;
}
  

  
